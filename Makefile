.PHONY:all clean

include $(TOPDIR)/rules.mk

#定义当前交叉编译工具链
CC=mipsel-openwrt-linux-uclibc-gcc

#定义当前目录
CUR_DIR=$(shell pwd)

#定义源代码文件目录
SRC_DIR=$(CUR_DIR)

#定义头文件目录
INC_DIR=$(CUR_DIR)/include

#定义连接文件目录
LIN_DIR=$(CUR_DIR)/obj

#定义库目录
LIB_DIR=-L $(STAGING_DIR)/usr/lib

#定义库头文件目录
LIB_INC_DIR=-I$(STAGING_DIR)/usr/include -I$(STAGING_DIR)/usr/include/public -I$(STAGING_DIR)/usr/include/json-c

#定义库名
#LIB_NAME=-lpublic -lwebsockets -ljson-c -lcurl 

#定义编译标识
CFLAG=-std=gnu99 -O0 -s -Wall -I$(INC_DIR) $(LIB_INC_DIR)

#定义交叉连接标识
#LFLAG=$(LIB_DIR) $(LIB_NAME) -lpthread -lm -ldl
LFLAG=$(LIB_DIR) -lpthread -lm -ldl

#定义应用名称
APP_NAME=helloworld

#获取当前目录下的c文件集
CUR_CFILES=${wildcard *.c}

#将对应的c文件名转为o文件
CUR_OFILES=${patsubst %.c, %.o, $(CUR_CFILES)}

#编译及连接
all:$(APP_NAME)
$(APP_NAME):$(CUR_OFILES)
	$(CC) $(CFLAG) -o $@ $(CUR_OFILES) $(LFLAG)
*.o:$.c
	$(CC) -c $< -o $
#清除
clean:
	@echo ""
	@echo ">> Started cleaning the files generated by the last compilation......"
	rm -v -f $(LIN_DIR)/*.o
	rm -v -f *.o
	rm -v -f $(APP_NAME)
	@echo ">> Finished cleaning the files generated by the last compilation."
	@echo ""
